
@use './predefine.scss' as pre;
@forward 'react-quill/dist/quill.snow.css';
@tailwind base;
@tailwind components;
@tailwind utilities;
 @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }

body{
    background: url('/storage/images/background.jpg');
    color: white;
    overflow-x: hidden;
}
.search{
    background-color: pre.$c-sel;
    padding: 3px 6px 3px 6px;
    border-radius: 2px;
}

.indicator{
    border-radius: 100%;
    height:15px;
    width: 15px;
    position: absolute;
    left: 50%;
    transform: translate(-50%, 0%);

}

#welcome-content::-webkit-scrollbar{
        display: none;
        
      }

.custom-scrollbar{
    &::-webkit-scrollbar 
    {
        display: block;
        
    }
    &::-webkit-scrollbar-track
   {
    
  background: pre.$c-dark-sea;
}
    &::-webkit-scrollbar-thumb{
      // background-color: pre.$c-dark-sel;
      background: pre.$c-sel;
       //color: white
    }
}

.scroller{
    scroll-snap-type: none;
    scroll-snap-align: unset;
    padding: 10px 10px 10px 10px;

    overflow: auto;
    max-height: 70%;
    overflow-x: hidden;
    overflow-y: auto;
}
      #welcome-content{
        scroll-snap-type: y mandatory;
        >*{
            scroll-snap-align: start;
        }
      }

.quill{
display: grid;
grid-template-rows: auto 1fr;
}
.mainSection{
    h3{
        font-size: 1.5rem;
        font-weight:bolder;
        margin: 20px;
        margin-top:30px;
    }
    h2{
        font-size: 1.2rem;
        font-weight:bolder;
        display: block;
        margin: 20px 0px 6px 0px;
    }
    p{
        display:inline-block;
        margin: 2px;
    }
    ol {
   
      
      
     li {
        margin: 6px;
        margin-left: 20px

      }}
}

.rank-table{
    position: relative;
    left:40px;

    td{
        padding: 12px 5px 12px 5px;
   
    }
}

.loader {
    border: 16px solid white; 
    border-top: 16px solid pre.$c-dark-sel; 
    border-radius: 50%;
    width: 120px;
    height: 120px;
    animation: spin 2s linear infinite;
  }
  
 
  